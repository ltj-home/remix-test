{
	"id": "dc2e307d90119268ee83668c0ff33b16",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"demo/demo12.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\ninterface MyInterface {\n   function foo() external pure returns(uint256);\n   function bar() external pure returns(bool);\n}\n\ncontract CalcInterfaceId is MyInterface, IERC165 {\n   // 直接获取接口的 interfaceId\n   function getId() external pure returns(bytes4) {\n     return type(MyInterface).interfaceId;\n   }\n\n   // 手动计算接口的 interfaceId\n   // 接口中所有的函数选择器，进行异或操作\n   function calcId() external pure returns(bytes4) {\n     return bytes4(keccak256(\"foo()\"))\n       ^ bytes4(keccak256(\"bar()\"));\n   }\n\n   // 实现 IERC165 的接口，用来判断合约是否支持 MyInterface\n   function supportsInterface(bytes4 interfaceId) external pure returns(bool) {\n     return interfaceId == type(MyInterface).interfaceId;\n   }\n\n   // 实现接口 MyInterface 的方法 foo\n   function foo() external pure returns(uint256) {\n     return 0;\n   }\n\n   // 实现接口 MyInterface 的方法 bar\n   function bar() external pure returns(bool) {\n     return true;\n   }\n}"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"demo/demo12.sol": {
				"CalcInterfaceId": {
					"abi": [
						{
							"inputs": [],
							"name": "bar",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calcId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getId",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"demo/demo12.sol\":240:1122  contract CalcInterfaceId is MyInterface, IERC165 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"demo/demo12.sol\":240:1122  contract CalcInterfaceId is MyInterface, IERC165 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5d1ca631\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc2985578\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe897de0a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfebb0f7e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"demo/demo12.sol\":747:886  function supportsInterface(bytes4 interfaceId) external pure returns(bool) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo/demo12.sol\":334:430  function getId() external pure returns(bytes4) {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo/demo12.sol\":936:1003  function foo() external pure returns(uint256) {... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo/demo12.sol\":536:666  function calcId() external pure returns(bytes4) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo/demo12.sol\":1053:1120  function bar() external pure returns(bool) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo/demo12.sol\":747:886  function supportsInterface(bytes4 interfaceId) external pure returns(bool) {... */\n    tag_11:\n        /* \"demo/demo12.sol\":816:820  bool */\n      0x00\n        /* \"demo/demo12.sol\":851:880  type(MyInterface).interfaceId */\n      0x3c235a0600000000000000000000000000000000000000000000000000000000\n        /* \"demo/demo12.sol\":836:880  interfaceId == type(MyInterface).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"demo/demo12.sol\":836:847  interfaceId */\n      dup3\n        /* \"demo/demo12.sol\":836:880  interfaceId == type(MyInterface).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"demo/demo12.sol\":829:880  return interfaceId == type(MyInterface).interfaceId */\n      swap1\n      pop\n        /* \"demo/demo12.sol\":747:886  function supportsInterface(bytes4 interfaceId) external pure returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"demo/demo12.sol\":334:430  function getId() external pure returns(bytes4) {... */\n    tag_15:\n        /* \"demo/demo12.sol\":373:379  bytes4 */\n      0x00\n        /* \"demo/demo12.sol\":395:424  type(MyInterface).interfaceId */\n      0x3c235a0600000000000000000000000000000000000000000000000000000000\n        /* \"demo/demo12.sol\":388:424  return type(MyInterface).interfaceId */\n      swap1\n      pop\n        /* \"demo/demo12.sol\":334:430  function getId() external pure returns(bytes4) {... */\n      swap1\n      jump\t// out\n        /* \"demo/demo12.sol\":936:1003  function foo() external pure returns(uint256) {... */\n    tag_19:\n        /* \"demo/demo12.sol\":973:980  uint256 */\n      0x00\n        /* \"demo/demo12.sol\":936:1003  function foo() external pure returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"demo/demo12.sol\":536:666  function calcId() external pure returns(bytes4) {... */\n    tag_23:\n        /* \"demo/demo12.sol\":576:582  bytes4 */\n      0x00\n        /* \"demo/demo12.sol\":641:659  keccak256(\"bar()\") */\n      0xfebb0f7ec7039aa2e910a219ff647ff82e58de8885d5a0f8da34066efaa52846\n        /* \"demo/demo12.sol\":605:623  keccak256(\"foo()\") */\n      0xc2985578b8f3b75f7dc66a767be2a4ef7d7c2224896a1c86e92ccf30bae678b7\n        /* \"demo/demo12.sol\":598:660  bytes4(keccak256(\"foo()\"))... */\n      xor\n        /* \"demo/demo12.sol\":591:660  return bytes4(keccak256(\"foo()\"))... */\n      swap1\n      pop\n        /* \"demo/demo12.sol\":536:666  function calcId() external pure returns(bytes4) {... */\n      swap1\n      jump\t// out\n        /* \"demo/demo12.sol\":1053:1120  function bar() external pure returns(bool) {... */\n    tag_26:\n        /* \"demo/demo12.sol\":1090:1094  bool */\n      0x00\n        /* \"demo/demo12.sol\":1110:1114  true */\n      0x01\n        /* \"demo/demo12.sol\":1103:1114  return true */\n      swap1\n      pop\n        /* \"demo/demo12.sol\":1053:1120  function bar() external pure returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_36:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_37:\n        /* \"#utility.yul\":561:584   */\n      tag_50\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_51:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_38:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_53\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_10:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_56\n      tag_34\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":833:952   */\n    tag_55:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_57\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_39:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_40:\n        /* \"#utility.yul\":1268:1289   */\n      tag_60\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_39\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_13:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_62\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_40\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1633   */\n    tag_41:\n        /* \"#utility.yul\":1603:1626   */\n      tag_64\n        /* \"#utility.yul\":1620:1625   */\n      dup2\n        /* \"#utility.yul\":1603:1626   */\n      tag_36\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1598:1601   */\n      dup3\n        /* \"#utility.yul\":1591:1627   */\n      mstore\n        /* \"#utility.yul\":1518:1633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1639:1857   */\n    tag_17:\n        /* \"#utility.yul\":1730:1734   */\n      0x00\n        /* \"#utility.yul\":1768:1770   */\n      0x20\n        /* \"#utility.yul\":1757:1766   */\n      dup3\n        /* \"#utility.yul\":1753:1771   */\n      add\n        /* \"#utility.yul\":1745:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1781:1850   */\n      tag_66\n        /* \"#utility.yul\":1847:1848   */\n      0x00\n        /* \"#utility.yul\":1836:1845   */\n      dup4\n        /* \"#utility.yul\":1832:1849   */\n      add\n        /* \"#utility.yul\":1823:1829   */\n      dup5\n        /* \"#utility.yul\":1781:1850   */\n      tag_41\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1639:1857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:1940   */\n    tag_42:\n        /* \"#utility.yul\":1900:1907   */\n      0x00\n        /* \"#utility.yul\":1929:1934   */\n      dup2\n        /* \"#utility.yul\":1918:1934   */\n      swap1\n      pop\n        /* \"#utility.yul\":1863:1940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2064   */\n    tag_43:\n        /* \"#utility.yul\":2033:2057   */\n      tag_69\n        /* \"#utility.yul\":2051:2056   */\n      dup2\n        /* \"#utility.yul\":2033:2057   */\n      tag_42\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2028:2031   */\n      dup3\n        /* \"#utility.yul\":2021:2058   */\n      mstore\n        /* \"#utility.yul\":1946:2064   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2292   */\n    tag_21:\n        /* \"#utility.yul\":2163:2167   */\n      0x00\n        /* \"#utility.yul\":2201:2203   */\n      0x20\n        /* \"#utility.yul\":2190:2199   */\n      dup3\n        /* \"#utility.yul\":2186:2204   */\n      add\n        /* \"#utility.yul\":2178:2204   */\n      swap1\n      pop\n        /* \"#utility.yul\":2214:2285   */\n      tag_71\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2271:2280   */\n      dup4\n        /* \"#utility.yul\":2267:2284   */\n      add\n        /* \"#utility.yul\":2258:2264   */\n      dup5\n        /* \"#utility.yul\":2214:2285   */\n      tag_43\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2070:2292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c5e84e62f27cb678ca916587b434cf7016f40b36c01d6159b05043835cb72e764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061032c8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806301ffc9a7146100595780635d1ca63114610089578063c2985578146100a7578063e897de0a146100c5578063febb0f7e146100e3575b5f80fd5b610073600480360381019061006e919061023f565b610101565b6040516100809190610284565b60405180910390f35b61009161016a565b60405161009e91906102ac565b60405180910390f35b6100af610191565b6040516100bc91906102dd565b60405180910390f35b6100cd610195565b6040516100da91906102ac565b60405180910390f35b6100eb6101de565b6040516100f89190610284565b60405180910390f35b5f7f3c235a06000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f3c235a0600000000000000000000000000000000000000000000000000000000905090565b5f90565b5f7ffebb0f7ec7039aa2e910a219ff647ff82e58de8885d5a0f8da34066efaa528467fc2985578b8f3b75f7dc66a767be2a4ef7d7c2224896a1c86e92ccf30bae678b718905090565b5f6001905090565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61021e816101ea565b8114610228575f80fd5b50565b5f8135905061023981610215565b92915050565b5f60208284031215610254576102536101e6565b5b5f6102618482850161022b565b91505092915050565b5f8115159050919050565b61027e8161026a565b82525050565b5f6020820190506102975f830184610275565b92915050565b6102a6816101ea565b82525050565b5f6020820190506102bf5f83018461029d565b92915050565b5f819050919050565b6102d7816102c5565b82525050565b5f6020820190506102f05f8301846102ce565b9291505056fea26469706673582212200c5e84e62f27cb678ca916587b434cf7016f40b36c01d6159b05043835cb72e764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xE897DE0A EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x3C235A0600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x3C235A0600000000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFEBB0F7EC7039AA2E910A219FF647FF82E58DE8885D5A0F8DA34066EFAA52846 PUSH32 0xC2985578B8F3B75F7DC66A767BE2A4EF7D7C2224896A1C86E92CCF30BAE678B7 XOR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP2 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x239 DUP2 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x1E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261 DUP5 DUP3 DUP6 ADD PUSH2 0x22B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E DUP2 PUSH2 0x26A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297 PUSH0 DUP4 ADD DUP5 PUSH2 0x275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BF PUSH0 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC MCOPY DUP5 0xE6 0x2F 0x27 0xCB PUSH8 0x8CA916587B434CF7 ADD PUSH16 0x40B36C01D6159B05043835CB72E76473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "240:882:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bar_95": {
									"entryPoint": 478,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calcId_64": {
									"entryPoint": 405,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@foo_87": {
									"entryPoint": 401,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getId_44": {
									"entryPoint": 362,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_79": {
									"entryPoint": 257,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2295:3",
										"nodeType": "YulBlock",
										"src": "0:2295:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "378:105:3",
													"nodeType": "YulBlock",
													"src": "378:105:3",
													"statements": [
														{
															"nativeSrc": "388:89:3",
															"nodeType": "YulAssignment",
															"src": "388:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:3",
																		"nodeType": "YulLiteral",
																		"src": "410:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nativeSrc": "399:78:3",
																"nodeType": "YulFunctionCall",
																"src": "399:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:3",
														"nodeType": "YulTypedName",
														"src": "360:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:3",
														"nodeType": "YulTypedName",
														"src": "370:7:3",
														"type": ""
													}
												],
												"src": "334:149:3"
											},
											{
												"body": {
													"nativeSrc": "531:78:3",
													"nodeType": "YulBlock",
													"src": "531:78:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:3",
																"nodeType": "YulBlock",
																"src": "587:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:3",
																					"nodeType": "YulLiteral",
																					"src": "596:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:3",
																					"nodeType": "YulLiteral",
																					"src": "599:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:3"
																			},
																			"nativeSrc": "589:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:3"
																		},
																		"nativeSrc": "589:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:3",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:3"
																				},
																				"nativeSrc": "561:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:3"
																		},
																		"nativeSrc": "551:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																},
																"nativeSrc": "544:42:3",
																"nodeType": "YulFunctionCall",
																"src": "544:42:3"
															},
															"nativeSrc": "541:62:3",
															"nodeType": "YulIf",
															"src": "541:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:3",
														"nodeType": "YulTypedName",
														"src": "524:5:3",
														"type": ""
													}
												],
												"src": "489:120:3"
											},
											{
												"body": {
													"nativeSrc": "666:86:3",
													"nodeType": "YulBlock",
													"src": "666:86:3",
													"statements": [
														{
															"nativeSrc": "676:29:3",
															"nodeType": "YulAssignment",
															"src": "676:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:3"
																},
																"nativeSrc": "685:20:3",
																"nodeType": "YulFunctionCall",
																"src": "685:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:3",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:3"
																},
																"nativeSrc": "714:32:3",
																"nodeType": "YulFunctionCall",
																"src": "714:32:3"
															},
															"nativeSrc": "714:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:3",
														"nodeType": "YulTypedName",
														"src": "644:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:3",
														"nodeType": "YulTypedName",
														"src": "652:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:3",
														"nodeType": "YulTypedName",
														"src": "660:5:3",
														"type": ""
													}
												],
												"src": "615:137:3"
											},
											{
												"body": {
													"nativeSrc": "823:262:3",
													"nodeType": "YulBlock",
													"src": "823:262:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:3",
																"nodeType": "YulBlock",
																"src": "869:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:3"
																			},
																			"nativeSrc": "871:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:3"
																		},
																		"nativeSrc": "871:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:3"
																		},
																		"nativeSrc": "840:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:3",
																		"nodeType": "YulLiteral",
																		"src": "865:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:3"
																},
																"nativeSrc": "836:32:3",
																"nodeType": "YulFunctionCall",
																"src": "836:32:3"
															},
															"nativeSrc": "833:119:3",
															"nodeType": "YulIf",
															"src": "833:119:3"
														},
														{
															"nativeSrc": "962:116:3",
															"nodeType": "YulBlock",
															"src": "962:116:3",
															"statements": [
																{
																	"nativeSrc": "977:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:3",
																		"nodeType": "YulLiteral",
																		"src": "991:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:3",
																			"nodeType": "YulTypedName",
																			"src": "981:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:3",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:3"
																				},
																				"nativeSrc": "1036:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:3",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:3"
																		},
																		"nativeSrc": "1016:52:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:3",
														"nodeType": "YulTypedName",
														"src": "793:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:3",
														"nodeType": "YulTypedName",
														"src": "804:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:3",
														"nodeType": "YulTypedName",
														"src": "816:6:3",
														"type": ""
													}
												],
												"src": "758:327:3"
											},
											{
												"body": {
													"nativeSrc": "1133:48:3",
													"nodeType": "YulBlock",
													"src": "1133:48:3",
													"statements": [
														{
															"nativeSrc": "1143:32:3",
															"nodeType": "YulAssignment",
															"src": "1143:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:3"
																		},
																		"nativeSrc": "1161:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:3"
																},
																"nativeSrc": "1154:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:3",
														"nodeType": "YulTypedName",
														"src": "1115:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:3",
														"nodeType": "YulTypedName",
														"src": "1125:7:3",
														"type": ""
													}
												],
												"src": "1091:90:3"
											},
											{
												"body": {
													"nativeSrc": "1246:50:3",
													"nodeType": "YulBlock",
													"src": "1246:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:3"
																		},
																		"nativeSrc": "1268:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nativeSrc": "1256:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:3"
															},
															"nativeSrc": "1256:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:3",
														"nodeType": "YulTypedName",
														"src": "1234:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:3",
														"nodeType": "YulTypedName",
														"src": "1241:3:3",
														"type": ""
													}
												],
												"src": "1187:109:3"
											},
											{
												"body": {
													"nativeSrc": "1394:118:3",
													"nodeType": "YulBlock",
													"src": "1394:118:3",
													"statements": [
														{
															"nativeSrc": "1404:26:3",
															"nodeType": "YulAssignment",
															"src": "1404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:3"
																},
																"nativeSrc": "1412:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:3"
																		},
																		"nativeSrc": "1487:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:3"
																},
																"nativeSrc": "1440:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:3"
															},
															"nativeSrc": "1440:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:3",
														"nodeType": "YulTypedName",
														"src": "1366:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:3",
														"nodeType": "YulTypedName",
														"src": "1378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:3",
														"nodeType": "YulTypedName",
														"src": "1389:4:3",
														"type": ""
													}
												],
												"src": "1302:210:3"
											},
											{
												"body": {
													"nativeSrc": "1581:52:3",
													"nodeType": "YulBlock",
													"src": "1581:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1598:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1598:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1620:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1620:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "1603:16:3",
																			"nodeType": "YulIdentifier",
																			"src": "1603:16:3"
																		},
																		"nativeSrc": "1603:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1591:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:3"
																},
																"nativeSrc": "1591:36:3",
																"nodeType": "YulFunctionCall",
																"src": "1591:36:3"
															},
															"nativeSrc": "1591:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "1591:36:3"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "1518:115:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1569:5:3",
														"nodeType": "YulTypedName",
														"src": "1569:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1576:3:3",
														"nodeType": "YulTypedName",
														"src": "1576:3:3",
														"type": ""
													}
												],
												"src": "1518:115:3"
											},
											{
												"body": {
													"nativeSrc": "1735:122:3",
													"nodeType": "YulBlock",
													"src": "1735:122:3",
													"statements": [
														{
															"nativeSrc": "1745:26:3",
															"nodeType": "YulAssignment",
															"src": "1745:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1757:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1757:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1768:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1768:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1753:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1753:3:3"
																},
																"nativeSrc": "1753:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1753:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1745:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1745:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1823:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1836:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1847:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1847:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1832:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:3"
																		},
																		"nativeSrc": "1832:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "1781:41:3",
																	"nodeType": "YulIdentifier",
																	"src": "1781:41:3"
																},
																"nativeSrc": "1781:69:3",
																"nodeType": "YulFunctionCall",
																"src": "1781:69:3"
															},
															"nativeSrc": "1781:69:3",
															"nodeType": "YulExpressionStatement",
															"src": "1781:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "1639:218:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1707:9:3",
														"nodeType": "YulTypedName",
														"src": "1707:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1719:6:3",
														"nodeType": "YulTypedName",
														"src": "1719:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1730:4:3",
														"nodeType": "YulTypedName",
														"src": "1730:4:3",
														"type": ""
													}
												],
												"src": "1639:218:3"
											},
											{
												"body": {
													"nativeSrc": "1908:32:3",
													"nodeType": "YulBlock",
													"src": "1908:32:3",
													"statements": [
														{
															"nativeSrc": "1918:16:3",
															"nodeType": "YulAssignment",
															"src": "1918:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:3",
																"nodeType": "YulIdentifier",
																"src": "1929:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1918:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1918:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1863:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1890:5:3",
														"nodeType": "YulTypedName",
														"src": "1890:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1900:7:3",
														"nodeType": "YulTypedName",
														"src": "1900:7:3",
														"type": ""
													}
												],
												"src": "1863:77:3"
											},
											{
												"body": {
													"nativeSrc": "2011:53:3",
													"nodeType": "YulBlock",
													"src": "2011:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2028:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2028:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2051:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2051:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2033:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2033:17:3"
																		},
																		"nativeSrc": "2033:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2033:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2021:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:3"
																},
																"nativeSrc": "2021:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2021:37:3"
															},
															"nativeSrc": "2021:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2021:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1946:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:3",
														"nodeType": "YulTypedName",
														"src": "1999:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2006:3:3",
														"nodeType": "YulTypedName",
														"src": "2006:3:3",
														"type": ""
													}
												],
												"src": "1946:118:3"
											},
											{
												"body": {
													"nativeSrc": "2168:124:3",
													"nodeType": "YulBlock",
													"src": "2168:124:3",
													"statements": [
														{
															"nativeSrc": "2178:26:3",
															"nodeType": "YulAssignment",
															"src": "2178:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2190:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2201:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2201:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2186:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2186:3:3"
																},
																"nativeSrc": "2186:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2186:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2178:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2178:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2258:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2258:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2271:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2271:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2282:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2282:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2267:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:3"
																		},
																		"nativeSrc": "2267:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2267:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2214:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2214:43:3"
																},
																"nativeSrc": "2214:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2214:71:3"
															},
															"nativeSrc": "2214:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2214:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2070:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:3",
														"nodeType": "YulTypedName",
														"src": "2140:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2152:6:3",
														"nodeType": "YulTypedName",
														"src": "2152:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2163:4:3",
														"nodeType": "YulTypedName",
														"src": "2163:4:3",
														"type": ""
													}
												],
												"src": "2070:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c806301ffc9a7146100595780635d1ca63114610089578063c2985578146100a7578063e897de0a146100c5578063febb0f7e146100e3575b5f80fd5b610073600480360381019061006e919061023f565b610101565b6040516100809190610284565b60405180910390f35b61009161016a565b60405161009e91906102ac565b60405180910390f35b6100af610191565b6040516100bc91906102dd565b60405180910390f35b6100cd610195565b6040516100da91906102ac565b60405180910390f35b6100eb6101de565b6040516100f89190610284565b60405180910390f35b5f7f3c235a06000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f3c235a0600000000000000000000000000000000000000000000000000000000905090565b5f90565b5f7ffebb0f7ec7039aa2e910a219ff647ff82e58de8885d5a0f8da34066efaa528467fc2985578b8f3b75f7dc66a767be2a4ef7d7c2224896a1c86e92ccf30bae678b718905090565b5f6001905090565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61021e816101ea565b8114610228575f80fd5b50565b5f8135905061023981610215565b92915050565b5f60208284031215610254576102536101e6565b5b5f6102618482850161022b565b91505092915050565b5f8115159050919050565b61027e8161026a565b82525050565b5f6020820190506102975f830184610275565b92915050565b6102a6816101ea565b82525050565b5f6020820190506102bf5f83018461029d565b92915050565b5f819050919050565b6102d7816102c5565b82525050565b5f6020820190506102f05f8301846102ce565b9291505056fea26469706673582212200c5e84e62f27cb678ca916587b434cf7016f40b36c01d6159b05043835cb72e764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5D1CA631 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xE897DE0A EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x3C235A0600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x3C235A0600000000000000000000000000000000000000000000000000000000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFEBB0F7EC7039AA2E910A219FF647FF82E58DE8885D5A0F8DA34066EFAA52846 PUSH32 0xC2985578B8F3B75F7DC66A767BE2A4EF7D7C2224896A1C86E92CCF30BAE678B7 XOR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP2 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x239 DUP2 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x1E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261 DUP5 DUP3 DUP6 ADD PUSH2 0x22B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E DUP2 PUSH2 0x26A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297 PUSH0 DUP4 ADD DUP5 PUSH2 0x275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BF PUSH0 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x2CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC MCOPY DUP5 0xE6 0x2F 0x27 0xCB PUSH8 0x8CA916587B434CF7 ADD PUSH16 0x40B36C01D6159B05043835CB72E76473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "240:882:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;334:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;936:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1053:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;747:139;816:4;851:29;836:44;;;:11;:44;;;;829:51;;747:139;;;:::o;334:96::-;373:6;395:29;388:36;;334:96;:::o;936:67::-;973:7;936:67;:::o;536:130::-;576:6;641:18;605;598:62;591:69;;536:130;:::o;1053:67::-;1090:4;1110;1103:11;;1053:67;:::o;88:117:3:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:115::-;1603:23;1620:5;1603:23;:::i;:::-;1598:3;1591:36;1518:115;;:::o;1639:218::-;1730:4;1768:2;1757:9;1753:18;1745:26;;1781:69;1847:1;1836:9;1832:17;1823:6;1781:69;:::i;:::-;1639:218;;;;:::o;1863:77::-;1900:7;1929:5;1918:16;;1863:77;;;:::o;1946:118::-;2033:24;2051:5;2033:24;:::i;:::-;2028:3;2021:37;1946:118;;:::o;2070:222::-;2163:4;2201:2;2190:9;2186:18;2178:26;;2214:71;2282:1;2271:9;2267:17;2258:6;2214:71;:::i;:::-;2070:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "162400",
								"executionCost": "206",
								"totalCost": "162606"
							},
							"external": {
								"bar()": "404",
								"calcId()": "388",
								"foo()": "346",
								"getId()": "338",
								"supportsInterface(bytes4)": "607"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1122,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c5e84e62f27cb678ca916587b434cf7016f40b36c01d6159b05043835cb72e764736f6c634300081a0033",
									".code": [
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "5D1CA631"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "C2985578"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "E897DE0A"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "FEBB0F7E"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 240,
											"end": 1122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 747,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 747,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 747,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 334,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 936,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 936,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 536,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 536,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1053,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1053,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 747,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 816,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "3C235A0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 836,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 880,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 880,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 880,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 880,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 829,
											"end": 880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 829,
											"end": 880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 334,
											"end": 430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "3C235A0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 388,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 388,
											"end": 424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 1003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 936,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 536,
											"end": 666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH",
											"source": 2,
											"value": "FEBB0F7EC7039AA2E910A219FF647FF82E58DE8885D5A0F8DA34066EFAA52846"
										},
										{
											"begin": 605,
											"end": 623,
											"name": "PUSH",
											"source": 2,
											"value": "C2985578B8F3B75F7DC66A767BE2A4EF7D7C2224896A1C86E92CCF30BAE678B7"
										},
										{
											"begin": 598,
											"end": 660,
											"name": "XOR",
											"source": 2
										},
										{
											"begin": 591,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 591,
											"end": 660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1603,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1603,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1730,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1781,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1781,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1946,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2051,
											"end": 2056,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2033,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2057,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2033,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2031,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 2064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 2064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2203,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2214,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2214,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"demo/demo12.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bar()": "febb0f7e",
							"calcId()": "e897de0a",
							"foo()": "c2985578",
							"getId()": "5d1ca631",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bar\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"demo/demo12.sol\":\"CalcInterfaceId\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"demo/demo12.sol\":{\"keccak256\":\"0x9020b22a1e5f2a7ae2f698ab2a6cf6e521f899a49b7b80830709d1f9e78438da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4566cc33eaf4cb5507240a07ebd35671716aa6068d73ef3ae6a4ac52eb19d20\",\"dweb:/ipfs/QmSBAgPAfAMxvzZsTEzhBvNxH2vwi2nq9wCqXo9vF8XfQ1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyInterface": {
					"abi": [
						{
							"inputs": [],
							"name": "bar",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "foo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bar()": "febb0f7e",
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bar\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"demo/demo12.sol\":\"MyInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"demo/demo12.sol\":{\"keccak256\":\"0x9020b22a1e5f2a7ae2f698ab2a6cf6e521f899a49b7b80830709d1f9e78438da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4566cc33eaf4cb5507240a07ebd35671716aa6068d73ef3ae6a4ac52eb19d20\",\"dweb:/ipfs/QmSBAgPAfAMxvzZsTEzhBvNxH2vwi2nq9wCqXo9vF8XfQ1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							15
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 16,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 15,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							15
						]
					},
					"id": 16,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:1",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IERC165",
							"nameLocation": "432:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 8,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:1"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "861:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:1"
									},
									"scope": 15,
									"src": "791:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 16,
							"src": "422:447:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:1"
				},
				"id": 1
			},
			"demo/demo12.sol": {
				"ast": {
					"absolutePath": "demo/demo12.sol",
					"exportedSymbols": {
						"CalcInterfaceId": [
							96
						],
						"IERC165": [
							15
						],
						"MyInterface": [
							29
						]
					},
					"id": 97,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 17,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 97,
							"sourceUnit": 4,
							"src": "58:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "MyInterface",
							"nameLocation": "126:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c2985578",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "152:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:2"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:9:2"
									},
									"scope": 29,
									"src": "143:46:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "febb0f7e",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bar",
									"nameLocation": "202:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:2"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "230:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "230:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:6:2"
									},
									"scope": 29,
									"src": "193:43:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 97,
							"src": "116:122:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 30,
										"name": "MyInterface",
										"nameLocations": [
											"268:11:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "268:11:2"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "268:11:2"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC165",
										"nameLocations": [
											"281:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 15,
										"src": "281:7:2"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:2"
								}
							],
							"canonicalName": "CalcInterfaceId",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96,
								15,
								29
							],
							"name": "CalcInterfaceId",
							"nameLocation": "249:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "381:49:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 39,
																"name": "MyInterface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "400:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MyInterface_$29_$",
																	"typeString": "type(contract MyInterface)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_contract$_MyInterface_$29_$",
																	"typeString": "type(contract MyInterface)"
																}
															],
															"id": 38,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "395:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "395:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_contract$_MyInterface_$29",
															"typeString": "type(contract MyInterface)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "413:11:2",
													"memberName": "interfaceId",
													"nodeType": "MemberAccess",
													"src": "395:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 37,
												"id": 42,
												"nodeType": "Return",
												"src": "388:36:2"
											}
										]
									},
									"functionSelector": "5d1ca631",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getId",
									"nameLocation": "343:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:2"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "373:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 35,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "373:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:8:2"
									},
									"scope": 96,
									"src": "334:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "584:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "666f6f2829",
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "615:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c2985578b8f3b75f7dc66a767be2a4ef7d7c2224896a1c86e92ccf30bae678b7",
																			"typeString": "literal_string \"foo()\""
																		},
																		"value": "foo()"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c2985578b8f3b75f7dc66a767be2a4ef7d7c2224896a1c86e92ccf30bae678b7",
																			"typeString": "literal_string \"foo()\""
																		}
																	],
																	"id": 51,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "605:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "605:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "598:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes4_$",
																"typeString": "type(bytes4)"
															},
															"typeName": {
																"id": 49,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "598:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "598:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "6261722829",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "651:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_febb0f7ec7039aa2e910a219ff647ff82e58de8885d5a0f8da34066efaa52846",
																			"typeString": "literal_string \"bar()\""
																		},
																		"value": "bar()"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_febb0f7ec7039aa2e910a219ff647ff82e58de8885d5a0f8da34066efaa52846",
																			"typeString": "literal_string \"bar()\""
																		}
																	],
																	"id": 57,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "641:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "641:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "634:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes4_$",
																"typeString": "type(bytes4)"
															},
															"typeName": {
																"id": 55,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "634:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "634:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "598:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 48,
												"id": 62,
												"nodeType": "Return",
												"src": "591:69:2"
											}
										]
									},
									"functionSelector": "e897de0a",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcId",
									"nameLocation": "545:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:2:2"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "576:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:8:2"
									},
									"scope": 96,
									"src": "536:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										14
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "822:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 71,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "836:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 73,
																	"name": "MyInterface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "856:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MyInterface_$29_$",
																		"typeString": "type(contract MyInterface)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_MyInterface_$29_$",
																		"typeString": "type(contract MyInterface)"
																	}
																],
																"id": 72,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "851:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_MyInterface_$29",
																"typeString": "type(contract MyInterface)"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "869:11:2",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "851:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "836:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "829:51:2"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "756:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "781:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "774:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 65,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:20:2"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "816:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:6:2"
									},
									"scope": 96,
									"src": "747:139:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "982:21:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "996:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "989:8:2"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "945:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:2:2"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "973:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:9:2"
									},
									"scope": 96,
									"src": "936:67:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1096:24:2",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1110:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 91,
												"id": 93,
												"nodeType": "Return",
												"src": "1103:11:2"
											}
										]
									},
									"functionSelector": "febb0f7e",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bar",
									"nameLocation": "1062:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:2"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1090:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:6:2"
									},
									"scope": 96,
									"src": "1053:67:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 97,
							"src": "240:882:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1090:2"
				},
				"id": 2
			}
		}
	}
}